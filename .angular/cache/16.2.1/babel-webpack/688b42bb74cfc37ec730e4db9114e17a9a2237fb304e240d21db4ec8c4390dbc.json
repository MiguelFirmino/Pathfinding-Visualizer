{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/node-map.service\";\nimport * as i2 from \"./services/algorithms/dijkstra.service\";\nimport * as i3 from \"./services/algorithms/a-star.service\";\nimport * as i4 from \"./services/algorithms/depth-first-search.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../node/node.component\";\nconst _c0 = function (a1, a2, a3, a4, a5, a6) {\n  return {\n    \"node\": true,\n    \"blocked\": a1,\n    \"path-node\": a2,\n    \"prospected\": a3,\n    \"visited\": a4,\n    \"start-node\": a5,\n    \"end-node\": a6\n  };\n};\nfunction NodeMapComponent_app_node_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-node\", 2);\n    i0.ɵɵlistener(\"nodeClickEvent\", function NodeMapComponent_app_node_4_Template_app_node_nodeClickEvent_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.receiveClickedNode($event));\n    })(\"nodeMoveEvent\", function NodeMapComponent_app_node_4_Template_app_node_nodeMoveEvent_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.receiveMovedNode($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const node_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"node\", node_r1)(\"ngClass\", i0.ɵɵpureFunction6(2, _c0, node_r1.isBlocked, ctx_r0.nodePath.includes(node_r1), node_r1.isProspected, node_r1.isVisited, node_r1 == ctx_r0.startingNode, node_r1 == ctx_r0.endingNode));\n  }\n}\nconst _c1 = function (a1) {\n  return {\n    \"node-map\": true,\n    \"disabled-animations\": a1\n  };\n};\nexport class NodeMapComponent {\n  constructor(nodeMapService, dijkstraService, aStartService, depthFirstSearchService) {\n    this.nodeMapService = nodeMapService;\n    this.dijkstraService = dijkstraService;\n    this.aStartService = aStartService;\n    this.depthFirstSearchService = depthFirstSearchService;\n    this.message = '';\n    this.clearMap = () => {\n      for (let node of this.nodeMap) {\n        node.parent = undefined;\n        node.pathDistance = Infinity;\n        node.heuristicDistance = Infinity;\n        node.isVisited = false;\n        node.isProspected = false;\n      }\n      clearInterval(this.pathAnimationInterval);\n      this.nodePath = [];\n      this.stopAlgorithm();\n      this.headerComponent.resetAlgorithmButton();\n    };\n    this.receiveClickedNode = node => {\n      // console.log(\n      //   `Node at x: ${node.xPosition}, y: ${node.yPosition} has been clicked`\n      // );\n      console.log(this.nodeMap.indexOf(node));\n      // set node function depending on what kind of node was clicked\n      if (node === this.startingNode) {\n        this.nodeFunction = this.setStartingNode;\n      } else if (node === this.endingNode) {\n        this.nodeFunction = this.setEndingNode;\n      } else if (!node.isBlocked) {\n        this.blockNode(node);\n        this.nodeFunction = this.blockNode;\n      } else {\n        this.unblockNode(node);\n        this.nodeFunction = this.unblockNode;\n      }\n    };\n    this.receiveMovedNode = node => {\n      // do function that was previously defined on mousedown\n      this.nodeFunction(node);\n    };\n    this.blockNode = node => {\n      if (node !== this.startingNode && node !== this.endingNode && (!node.isVisited && !node.isProspected || !this.isAlgorithmOperating)) {\n        console.log(`Node at ${node.xPosition}, ${node.yPosition} is now %cblocked`, 'color: yellow');\n        node.isBlocked = true;\n      } else {\n        console.log(`%cUnable to block node at ${node.xPosition}, ${node.yPosition}`, 'color: red');\n      }\n    };\n    this.unblockNode = node => {\n      if (node.isBlocked) {\n        console.log(`Node at ${node.xPosition}, ${node.yPosition} is now %cunblocked`, 'color: lightgreen');\n        node.isBlocked = false;\n      }\n    };\n    this.setStartingNode = node => {\n      if (!node.isBlocked && node != this.endingNode && !this.isAlgorithmOperating) {\n        console.log(`Node at ${node.xPosition}, ${node.yPosition} is now %cstarting Node`, 'color: lightblue');\n        this.startingNode = node;\n      } else {\n        console.log(`%cUnable to set node at ${node.xPosition}, ${node.yPosition} as starting node`, 'color: red');\n      }\n    };\n    this.setEndingNode = node => {\n      if (!node.isBlocked && node != this.startingNode && !this.isAlgorithmOperating) {\n        console.log(`Node at ${node.xPosition}, ${node.yPosition} is %cnow ending Node`, 'color: lightgreen');\n        this.endingNode = node;\n      } else {\n        console.log(`%cUnable to set node at ${node.xPosition}, ${node.yPosition} as ending node`, 'color: red');\n      }\n    };\n    this.startAlgorithm = () => {\n      this.isAnimated = true;\n      this.clearMap();\n      this.algorithmService.setAlgorithmValues(this.startingNode, this.endingNode);\n      this.resumeAlgorithm();\n    };\n    this.stopAlgorithm = () => {\n      clearInterval(this.algorithmInterval);\n      this.isAlgorithmOperating = false;\n    };\n    this.resumeAlgorithm = () => {\n      this.algorithmInterval = setInterval(() => {\n        this.doAlgorithmIteration();\n      }, this.algorithmDelay);\n      this.isAlgorithmOperating = true;\n    };\n    this.doAlgorithmIteration = () => {\n      this.algorithmService.doIteration();\n      // trace path to node being visited\n      let currentNode = this.algorithmService.currentNode;\n      // this.nodePath = this.algorithmService.tracePath(currentNode);\n      let {\n        isDone,\n        reason\n      } = this.algorithmService.checkIfDone();\n      if (isDone == true) {\n        this.stopAlgorithm();\n        this.headerComponent.resetAlgorithmButton();\n        if (reason == 'reached end') {\n          // this.message = `Reached End Node after ${this.aStarService.iterationCount} steps`;\n          console.log(`Reached End Node after ${this.algorithmService.iterationCount} steps`);\n          let path = this.algorithmService.tracePath(currentNode);\n          this.animatePath(path);\n        } else {\n          // this.message = `No solution available after ${this.aStarService.iterationCount} steps`;\n          console.log(`No solution available after ${this.algorithmService.iterationCount} steps`);\n          this.nodePath = [];\n        }\n      }\n    };\n    this.changeAlgorithmDelay = newDelay => {\n      this.algorithmDelay = newDelay;\n      if (this.isAlgorithmOperating) {\n        this.stopAlgorithm();\n        this.resumeAlgorithm();\n      }\n    };\n    this.changeAlgorithmService = newAlgorithm => {\n      if (this.isAlgorithmOperating) {\n        console.log('(from node-map) %cunable to change algorithm', 'color: red');\n        return;\n      }\n      console.log(`(from node-map) %cchanged algorithm to ${newAlgorithm}`, 'color: lightgreen');\n      switch (newAlgorithm) {\n        case 'dijkstra':\n          this.algorithmService = this.dijkstraService;\n          break;\n        case 'a-star':\n          this.algorithmService = this.aStartService;\n          break;\n        case 'depth-first-search':\n          this.algorithmService = this.depthFirstSearchService;\n          break;\n      }\n    };\n    // MAKE THIS MORE READABLE\n    this.doCompleteCycle = () => {\n      // disable animations to prevent information cluster\n      this.isAnimated = false;\n      clearInterval(this.pathAnimationInterval);\n      this.clearMap();\n      this.algorithmService.setAlgorithmValues(this.startingNode, this.endingNode);\n      this.algorithmService.doCompleteCycle();\n      if (this.algorithmService.checkIfDone().reason != 'no solution') {\n        let path = this.algorithmService.tracePath(this.algorithmService.currentNode);\n        // this.animatePath(path);\n        this.nodePath = path;\n      }\n    };\n    this.animatePath = path => {\n      let animationDelay = 2000 / path.length ** 2;\n      // from start to finish\n      this.pathAnimationInterval = setInterval(() => {\n        if (path.length > 0) {\n          this.nodePath.push(path.pop());\n        } else {\n          clearInterval(this.pathAnimationInterval);\n        }\n      }, animationDelay);\n      // from finish to start\n      // this.pathAnimationInterval = setInterval(() => {\n      //   if (path.length > 0) {\n      //     this.nodePath.push(path.pop())\n      //   } else {\n      //     clearInterval(this.pathAnimationInterval);\n      //   }\n      // }, 20);\n      // random selection\n      // this.pathAnimationInterval = setInterval(() => {\n      //   if (path.length > 0) {\n      //     let randomIndex = Math.floor(Math.random()*path.length);\n      //     this.nodePath.push(path[randomIndex]);\n      //     path.splice(randomIndex, 1);\n      //   } else {\n      //     clearInterval(this.pathAnimationInterval);\n      //   }\n      // }, 20);\n    };\n  }\n  // default parameters\n  ngOnInit() {\n    this.algorithmDelay = 50; // 50\n    this.mapWidth = 60; // 60\n    this.mapHeight = 30; // 30\n    this.nodeMap = this.nodeMapService.generateMap(this.mapWidth, this.mapHeight);\n    this.startingNode = this.nodeMap[30]; // 854\n    this.endingNode = this.nodeMap[60]; // 885\n    this.nodePath = [];\n    this.isAlgorithmOperating = false;\n    this.algorithmDelay = 50; // 50\n    this.algorithmService = this.dijkstraService;\n    this.isAnimated = true; // true\n  }\n}\n_class = NodeMapComponent;\n_class.ɵfac = function NodeMapComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NodeMapService), i0.ɵɵdirectiveInject(i2.DijkstraService), i0.ɵɵdirectiveInject(i3.AStarService), i0.ɵɵdirectiveInject(i4.DepthFirstSearchService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-node-map\"]],\n  inputs: {\n    headerComponent: \"headerComponent\"\n  },\n  decls: 5,\n  vars: 9,\n  consts: [[3, \"ngClass\"], [3, \"node\", \"ngClass\", \"nodeClickEvent\", \"nodeMoveEvent\", 4, \"ngFor\", \"ngForOf\"], [3, \"node\", \"ngClass\", \"nodeClickEvent\", \"nodeMoveEvent\"]],\n  template: function NodeMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"hr\");\n      i0.ɵɵelementStart(1, \"h3\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 0);\n      i0.ɵɵtemplate(4, NodeMapComponent_app_node_4_Template, 1, 9, \"app-node\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.message, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"--map-width\", ctx.mapWidth)(\"--map-height\", ctx.mapHeight);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1, !ctx.isAnimated));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.nodeMap);\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgForOf, i6.NodeComponent],\n  styles: [\".disabled-animations[_ngcontent-%COMP%]   .node[_ngcontent-%COMP%] {\\n  animation: none !important;\\n}\\n\\n.disabled-animations[_ngcontent-%COMP%]   .node[_ngcontent-%COMP%]:hover {\\n  transition: none !important;\\n  transform: none !important;\\n}\\n\\n.node-map[_ngcontent-%COMP%] {\\n  box-sizing: content-box;\\n  border-width: 1px 0 0 1px;\\n  border-style: solid;\\n  border-color: black;\\n  margin: 0 auto;\\n  position: relative;\\n  display: flex;\\n  flex-wrap: wrap;\\n  --parent-width: calc(1.12vw * var(--map-width));\\n  --parent-height: calc(1.12vw * var(--map-height));\\n  width: var(--parent-width);\\n  height: var(--parent-height);\\n}\\n\\n.node-map[_ngcontent-%COMP%]   .node[_ngcontent-%COMP%] {\\n  border-width: 0 1px 1px 0;\\n  border-style: solid;\\n  border-color: black;\\n  background-color: --blank-node-bg;\\n  -webkit-user-select: none;\\n          user-select: none;\\n  text-align: center;\\n  width: calc(var(--parent-width) / var(--map-width));\\n  height: calc(var(--parent-height) / var(--map-height));\\n  transition: transform 0.15s ease-in-out;\\n}\\n\\n@keyframes _ngcontent-%COMP%_nodeAnim {\\n  0% {\\n    transform: scale(1.2) rotate(-8deg);\\n  }\\n  100% {\\n    transform: scale(1) rotate(0deg);\\n  }\\n}\\n.node-map[_ngcontent-%COMP%]   .node[_ngcontent-%COMP%]:hover {\\n  cursor: pointer;\\n  transform: scale(1.2);\\n}\\n\\n.node-map[_ngcontent-%COMP%]   .prospected[_ngcontent-%COMP%] {\\n  background-color: #75FF57;\\n}\\n\\n.node-map[_ngcontent-%COMP%]   .visited[_ngcontent-%COMP%] {\\n  background-color: #ffff00;\\n  animation: _ngcontent-%COMP%_visitedAnim 0.25s;\\n}\\n\\n@keyframes _ngcontent-%COMP%_visitedAnim {\\n  0% {\\n    transform: scale(1.2);\\n  }\\n  100% {\\n    transform: scale(1);\\n  }\\n}\\n.node-map[_ngcontent-%COMP%]   .path-node[_ngcontent-%COMP%] {\\n  background-color: #ffa500;\\n  animation: _ngcontent-%COMP%_pathNodeAnim 0.3s;\\n}\\n\\n@keyframes _ngcontent-%COMP%_pathNodeAnim {\\n  0% {\\n    transform: scale(0.8);\\n  }\\n  30% {\\n    transform: scale(1.2);\\n  }\\n  100% {\\n    transform: scale(1);\\n  }\\n}\\n.node-map[_ngcontent-%COMP%]   .blocked[_ngcontent-%COMP%] {\\n  background-color: #444;\\n  animation: _ngcontent-%COMP%_blockAnim 0.2s ease-out !important;\\n}\\n\\n@keyframes _ngcontent-%COMP%_blockAnim {\\n  0% {\\n    background-color: initial;\\n    transform: scale(1.3) rotate(8deg);\\n  }\\n  50% {\\n    background-color: var(--blocked-node-bg);\\n  }\\n  100% {\\n    transform: scale(1) rotate(0deg);\\n  }\\n}\\n.node-map[_ngcontent-%COMP%]   .start-node[_ngcontent-%COMP%] {\\n  background-color: var(--start-node-bg);\\n  animation: _ngcontent-%COMP%_startNodeAnim 0.15s;\\n}\\n\\n@keyframes _ngcontent-%COMP%_startNodeAnim {\\n  0% {\\n    transform: scale(0.7);\\n  }\\n  100% {\\n    transform: scale(1);\\n  }\\n}\\n.node-map[_ngcontent-%COMP%]   .end-node[_ngcontent-%COMP%] {\\n  background-color: var(--end-node-bg);\\n  animation: _ngcontent-%COMP%_endNodeAnim 0.15s ease-out;\\n}\\n\\n@keyframes _ngcontent-%COMP%_endNodeAnim {\\n  0% {\\n    transform: scale(0.7);\\n  }\\n  100% {\\n    transform: scale(1);\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbm9kZS1tYXAvbm9kZS1tYXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwwQkFBQTtBQUNKOztBQUVBO0VBQ0ksMkJBQUE7RUFDQSwwQkFBQTtBQUNKOztBQUVBO0VBQ0ksdUJBQUE7RUFDQSx5QkFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0VBQ0EsZUFBQTtFQUNBLCtDQUFBO0VBQ0EsaURBQUE7RUFDQSwwQkFBQTtFQUNBLDRCQUFBO0FBQ0o7O0FBRUE7RUFDSSx5QkFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQ0FBQTtFQUNBLHlCQUFBO1VBQUEsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1EQUFBO0VBQ0Esc0RBQUE7RUFDQSx1Q0FBQTtBQUNKOztBQUVBO0VBQ0k7SUFDSSxtQ0FBQTtFQUNOO0VBQ0U7SUFDSSxnQ0FBQTtFQUNOO0FBQ0Y7QUFFQTtFQUNJLGVBQUE7RUFDQSxxQkFBQTtBQUFKOztBQUdBO0VBQ0kseUJBQUE7QUFBSjs7QUFHQTtFQUNJLHlCQUFBO0VBQ0EsNEJBQUE7QUFBSjs7QUFHQTtFQUNJO0lBQ0kscUJBQUE7RUFBTjtFQUVFO0lBQ0ksbUJBQUE7RUFBTjtBQUNGO0FBR0E7RUFDSSx5QkFBQTtFQUNBLDRCQUFBO0FBREo7O0FBSUE7RUFDSTtJQUNJLHFCQUFBO0VBRE47RUFHRTtJQUNJLHFCQUFBO0VBRE47RUFHRTtJQUNJLG1CQUFBO0VBRE47QUFDRjtBQUlBO0VBQ0ksc0JBQUE7RUFDQSw2Q0FBQTtBQUZKOztBQUtBO0VBQ0k7SUFDSSx5QkFBQTtJQUNBLGtDQUFBO0VBRk47RUFJRTtJQUNJLHdDQUFBO0VBRk47RUFJRTtJQUNJLGdDQUFBO0VBRk47QUFDRjtBQUtBO0VBQ0ksc0NBQUE7RUFDQSw4QkFBQTtBQUhKOztBQU1BO0VBQ0k7SUFDSSxxQkFBQTtFQUhOO0VBS0U7SUFDSSxtQkFBQTtFQUhOO0FBQ0Y7QUFNQTtFQUNJLG9DQUFBO0VBQ0EscUNBQUE7QUFKSjs7QUFPQTtFQUNJO0lBQ0kscUJBQUE7RUFKTjtFQU1FO0lBQ0ksbUJBQUE7RUFKTjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmRpc2FibGVkLWFuaW1hdGlvbnMgLm5vZGUge1xyXG4gICAgYW5pbWF0aW9uOiBub25lICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5kaXNhYmxlZC1hbmltYXRpb25zIC5ub2RlOmhvdmVyIHtcclxuICAgIHRyYW5zaXRpb246IG5vbmUgIWltcG9ydGFudDtcclxuICAgIHRyYW5zZm9ybTogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubm9kZS1tYXAge1xyXG4gICAgYm94LXNpemluZzogY29udGVudC1ib3g7XHJcbiAgICBib3JkZXItd2lkdGg6IDFweCAwIDAgMXB4O1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJvcmRlci1jb2xvcjogYmxhY2s7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAtLXBhcmVudC13aWR0aDogY2FsYygxLjEydncgKiB2YXIoLS1tYXAtd2lkdGgpKTtcclxuICAgIC0tcGFyZW50LWhlaWdodDogY2FsYygxLjEydncgKiB2YXIoLS1tYXAtaGVpZ2h0KSk7XHJcbiAgICB3aWR0aDogdmFyKC0tcGFyZW50LXdpZHRoKTtcclxuICAgIGhlaWdodDogdmFyKC0tcGFyZW50LWhlaWdodCk7XHJcbn1cclxuXHJcbi5ub2RlLW1hcCAubm9kZSB7XHJcbiAgICBib3JkZXItd2lkdGg6IDAgMXB4IDFweCAwO1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJvcmRlci1jb2xvcjogYmxhY2s7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAtLWJsYW5rLW5vZGUtYmc7XHJcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHdpZHRoOiBjYWxjKHZhcigtLXBhcmVudC13aWR0aCkgLyB2YXIoLS1tYXAtd2lkdGgpKTtcclxuICAgIGhlaWdodDogY2FsYyh2YXIoLS1wYXJlbnQtaGVpZ2h0KSAvIHZhcigtLW1hcC1oZWlnaHQpKTtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjE1cyBlYXNlLWluLW91dDtcclxufVxyXG5cclxuQGtleWZyYW1lcyBub2RlQW5pbSB7XHJcbiAgICAwJSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpIHJvdGF0ZSgtOGRlZyk7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpIHJvdGF0ZSgwZGVnKTtcclxuICAgIH1cclxufVxyXG5cclxuLm5vZGUtbWFwIC5ub2RlOmhvdmVyIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcclxufVxyXG5cclxuLm5vZGUtbWFwIC5wcm9zcGVjdGVkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM3NUZGNTc7XHJcbn1cclxuXHJcbi5ub2RlLW1hcCAudmlzaXRlZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZjAwO1xyXG4gICAgYW5pbWF0aW9uOiB2aXNpdGVkQW5pbSAwLjI1cztcclxufVxyXG5cclxuQGtleWZyYW1lcyB2aXNpdGVkQW5pbSB7XHJcbiAgICAwJSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xyXG4gICAgfVxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxuICAgIH1cclxufVxyXG5cclxuLm5vZGUtbWFwIC5wYXRoLW5vZGUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYTUwMDtcclxuICAgIGFuaW1hdGlvbjogcGF0aE5vZGVBbmltIDAuM3M7XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgcGF0aE5vZGVBbmltIHtcclxuICAgIDAlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOCk7XHJcbiAgICB9XHJcbiAgICAzMCUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5ub2RlLW1hcCAuYmxvY2tlZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yIDogIzQ0NDtcclxuICAgIGFuaW1hdGlvbjogYmxvY2tBbmltIDAuMnMgZWFzZS1vdXQgIWltcG9ydGFudDtcclxufVxyXG5cclxuQGtleWZyYW1lcyBibG9ja0FuaW0ge1xyXG4gICAgMCUge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGluaXRpYWw7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjMpIHJvdGF0ZSg4ZGVnKTtcclxuICAgIH1cclxuICAgIDUwJSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmxvY2tlZC1ub2RlLWJnKTtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSkgcm90YXRlKDBkZWcpO1xyXG4gICAgfVxyXG59XHJcblxyXG4ubm9kZS1tYXAgLnN0YXJ0LW5vZGUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc3RhcnQtbm9kZS1iZyk7XHJcbiAgICBhbmltYXRpb246IHN0YXJ0Tm9kZUFuaW0gMC4xNXM7XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgc3RhcnROb2RlQW5pbSB7XHJcbiAgICAwJSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjcpO1xyXG4gICAgfVxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxuICAgIH1cclxufVxyXG5cclxuLm5vZGUtbWFwIC5lbmQtbm9kZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1lbmQtbm9kZS1iZyk7XHJcbiAgICBhbmltYXRpb246IGVuZE5vZGVBbmltIDAuMTVzIGVhc2Utb3V0O1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGVuZE5vZGVBbmltIHtcclxuICAgIDAlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNyk7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","NodeMapComponent_app_node_4_Template_app_node_nodeClickEvent_0_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","receiveClickedNode","NodeMapComponent_app_node_4_Template_app_node_nodeMoveEvent_0_listener","ctx_r4","receiveMovedNode","ɵɵelementEnd","ɵɵproperty","node_r1","ɵɵpureFunction6","_c0","isBlocked","ctx_r0","nodePath","includes","isProspected","isVisited","startingNode","endingNode","NodeMapComponent","constructor","nodeMapService","dijkstraService","aStartService","depthFirstSearchService","message","clearMap","node","nodeMap","parent","undefined","pathDistance","Infinity","heuristicDistance","clearInterval","pathAnimationInterval","stopAlgorithm","headerComponent","resetAlgorithmButton","console","log","indexOf","nodeFunction","setStartingNode","setEndingNode","blockNode","unblockNode","isAlgorithmOperating","xPosition","yPosition","startAlgorithm","isAnimated","algorithmService","setAlgorithmValues","resumeAlgorithm","algorithmInterval","setInterval","doAlgorithmIteration","algorithmDelay","doIteration","currentNode","isDone","reason","checkIfDone","iterationCount","path","tracePath","animatePath","changeAlgorithmDelay","newDelay","changeAlgorithmService","newAlgorithm","doCompleteCycle","animationDelay","length","push","pop","ngOnInit","mapWidth","mapHeight","generateMap","ɵɵdirectiveInject","i1","NodeMapService","i2","DijkstraService","i3","AStarService","i4","DepthFirstSearchService","selectors","inputs","decls","vars","consts","template","NodeMapComponent_Template","rf","ctx","ɵɵelement","ɵɵtext","ɵɵtemplate","NodeMapComponent_app_node_4_Template","ɵɵadvance","ɵɵtextInterpolate1","ɵɵstyleProp","ɵɵpureFunction1","_c1"],"sources":["C:\\Users\\Miguel\\Desktop\\algorithm-visualizer\\src\\app\\node-map\\node-map.component.ts","C:\\Users\\Miguel\\Desktop\\algorithm-visualizer\\src\\app\\node-map\\node-map.component.html"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport { NodeMapService } from './services/node-map.service';\r\nimport { DijkstraService } from './services/algorithms/dijkstra.service';\r\nimport { AStarService } from './services/algorithms/a-star.service';\r\nimport { DepthFirstSearchService } from './services/algorithms/depth-first-search.service';\r\nimport { HeaderComponent } from '../header/header.component';\r\nimport { Node } from '../node/node';\r\n\r\n@Component({\r\n  selector: 'app-node-map',\r\n  templateUrl: './node-map.component.html',\r\n  styleUrls: ['./node-map.component.scss']\r\n})\r\nexport class NodeMapComponent implements OnInit {\r\n  @Input() headerComponent: HeaderComponent;\r\n\r\n  constructor(\r\n    private nodeMapService: NodeMapService,\r\n    private dijkstraService: DijkstraService,\r\n    private aStartService: AStarService,\r\n    private depthFirstSearchService: DepthFirstSearchService\r\n    ) {}\r\n\r\n  message: string = '';\r\n  isAnimated: boolean;\r\n  mapWidth: number;\r\n  mapHeight: number;\r\n  nodeMap: Node[];\r\n  startingNode: Node;\r\n  endingNode: Node;\r\n  nodeFunction: any;\r\n  nodePath: Node[];\r\n  isAlgorithmOperating: boolean;\r\n  algorithmDelay: number;\r\n  algorithmInterval: any;\r\n  algorithmService: any;\r\n  pathAnimationInterval: any;\r\n\r\n  clearMap = () => {\r\n    for (let node of this.nodeMap) {\r\n      node.parent = undefined;\r\n      node.pathDistance = Infinity;\r\n      node.heuristicDistance = Infinity;\r\n      node.isVisited = false;\r\n      node.isProspected = false;\r\n    }\r\n\r\n    clearInterval(this.pathAnimationInterval);\r\n    this.nodePath = [];\r\n    this.stopAlgorithm();\r\n    this.headerComponent.resetAlgorithmButton();\r\n  };\r\n\r\n  receiveClickedNode = (node) => {\r\n    // console.log(\r\n    //   `Node at x: ${node.xPosition}, y: ${node.yPosition} has been clicked`\r\n    // );\r\n    console.log(this.nodeMap.indexOf(node));\r\n\r\n    // set node function depending on what kind of node was clicked\r\n    if (node === this.startingNode) {\r\n      this.nodeFunction = this.setStartingNode;\r\n    } else if (node === this.endingNode) {\r\n      this.nodeFunction = this.setEndingNode;\r\n    } else if (!node.isBlocked) {\r\n      this.blockNode(node);\r\n      this.nodeFunction = this.blockNode;\r\n    } else {\r\n      this.unblockNode(node);\r\n      this.nodeFunction = this.unblockNode;\r\n    }\r\n  };\r\n\r\n  receiveMovedNode = (node) => {\r\n    // do function that was previously defined on mousedown\r\n    this.nodeFunction(node);\r\n  };\r\n\r\n  blockNode = (node) => {\r\n    if (\r\n      node !== this.startingNode &&\r\n      node !== this.endingNode &&\r\n      ((!node.isVisited && !node.isProspected) || !this.isAlgorithmOperating)\r\n    ) {\r\n      console.log(\r\n        `Node at ${node.xPosition}, ${node.yPosition} is now %cblocked`,\r\n        'color: yellow'\r\n      );\r\n      node.isBlocked = true;\r\n    } else {\r\n      console.log(\r\n        `%cUnable to block node at ${node.xPosition}, ${node.yPosition}`,\r\n        'color: red'\r\n      );\r\n    }\r\n  };\r\n\r\n  unblockNode = (node) => {\r\n    if (node.isBlocked) {\r\n      console.log(\r\n        `Node at ${node.xPosition}, ${node.yPosition} is now %cunblocked`,\r\n        'color: lightgreen'\r\n      );\r\n      node.isBlocked = false;\r\n    }\r\n  };\r\n\r\n  setStartingNode = (node) => {\r\n    if (\r\n      !node.isBlocked &&\r\n      node != this.endingNode &&\r\n      !this.isAlgorithmOperating\r\n    ) {\r\n      console.log(\r\n        `Node at ${node.xPosition}, ${node.yPosition} is now %cstarting Node`,\r\n        'color: lightblue'\r\n      );\r\n      this.startingNode = node;\r\n    } else {\r\n      console.log(\r\n        `%cUnable to set node at ${node.xPosition}, ${node.yPosition} as starting node`,\r\n        'color: red'\r\n      );\r\n    }\r\n  };\r\n\r\n  setEndingNode = (node) => {\r\n    if (\r\n      !node.isBlocked &&\r\n      node != this.startingNode &&\r\n      !this.isAlgorithmOperating\r\n    ) {\r\n      console.log(\r\n        `Node at ${node.xPosition}, ${node.yPosition} is %cnow ending Node`,\r\n        'color: lightgreen'\r\n      );\r\n      this.endingNode = node;\r\n    } else {\r\n      console.log(\r\n        `%cUnable to set node at ${node.xPosition}, ${node.yPosition} as ending node`,\r\n        'color: red'\r\n      );\r\n    }\r\n  };\r\n\r\n  startAlgorithm = () => {\r\n    this.isAnimated = true;\r\n    this.clearMap();\r\n    this.algorithmService.setAlgorithmValues(\r\n      this.startingNode,\r\n      this.endingNode\r\n    );\r\n\r\n    this.resumeAlgorithm();\r\n  };\r\n\r\n  stopAlgorithm = () => {\r\n    clearInterval(this.algorithmInterval);\r\n    this.isAlgorithmOperating = false;\r\n  };\r\n\r\n  resumeAlgorithm = () => {\r\n    this.algorithmInterval = setInterval(() => {\r\n      this.doAlgorithmIteration();\r\n    }, this.algorithmDelay);\r\n\r\n    this.isAlgorithmOperating = true;\r\n  };\r\n\r\n  doAlgorithmIteration = () => {\r\n    this.algorithmService.doIteration();\r\n    \r\n    // trace path to node being visited\r\n    let currentNode = this.algorithmService.currentNode;\r\n    // this.nodePath = this.algorithmService.tracePath(currentNode);\r\n\r\n    let { isDone, reason } = this.algorithmService.checkIfDone();\r\n\r\n    if (isDone == true) {\r\n      this.stopAlgorithm();\r\n      this.headerComponent.resetAlgorithmButton();\r\n\r\n      if (reason == 'reached end') {\r\n        // this.message = `Reached End Node after ${this.aStarService.iterationCount} steps`;\r\n        console.log(\r\n          `Reached End Node after ${this.algorithmService.iterationCount} steps`\r\n        );\r\n        let path = this.algorithmService.tracePath(currentNode);\r\n        this.animatePath(path);\r\n      } else {\r\n        // this.message = `No solution available after ${this.aStarService.iterationCount} steps`;\r\n        console.log(\r\n          `No solution available after ${this.algorithmService.iterationCount} steps`\r\n        );\r\n        this.nodePath = [];\r\n      }\r\n    }\r\n  };\r\n\r\n  changeAlgorithmDelay = (newDelay: number) => {\r\n    this.algorithmDelay = newDelay;\r\n    if (this.isAlgorithmOperating) {\r\n      this.stopAlgorithm();\r\n      this.resumeAlgorithm();\r\n    }\r\n  };\r\n\r\n  changeAlgorithmService = (newAlgorithm: string) => {\r\n    if (this.isAlgorithmOperating) {\r\n      console.log('(from node-map) %cunable to change algorithm', 'color: red');\r\n      return;\r\n    }\r\n    console.log(\r\n      `(from node-map) %cchanged algorithm to ${newAlgorithm}`,\r\n      'color: lightgreen'\r\n    );\r\n    switch (newAlgorithm) {\r\n      case 'dijkstra':\r\n        this.algorithmService = this.dijkstraService;\r\n        break;\r\n      case 'a-star':\r\n        this.algorithmService = this.aStartService;\r\n        break;\r\n      case 'depth-first-search':\r\n        this.algorithmService = this.depthFirstSearchService;\r\n        break;\r\n    }\r\n  };\r\n\r\n  // MAKE THIS MORE READABLE\r\n  doCompleteCycle = () => {\r\n    // disable animations to prevent information cluster\r\n    this.isAnimated = false;\r\n    clearInterval(this.pathAnimationInterval);\r\n\r\n    this.clearMap();\r\n    this.algorithmService.setAlgorithmValues(\r\n      this.startingNode,\r\n      this.endingNode\r\n    );\r\n\r\n    this.algorithmService.doCompleteCycle();\r\n\r\n    if (this.algorithmService.checkIfDone().reason != 'no solution') {\r\n      let path = this.algorithmService.tracePath(this.algorithmService.currentNode);\r\n      // this.animatePath(path);\r\n      this.nodePath = path;\r\n    }\r\n  };\r\n\r\n  animatePath = (path: []) => {\r\n    let animationDelay = 2000 / path.length ** 2;\r\n\r\n    // from start to finish\r\n    this.pathAnimationInterval = setInterval(() => {\r\n      if (path.length > 0) {\r\n        this.nodePath.push(path.pop())\r\n      } else {\r\n        clearInterval(this.pathAnimationInterval);\r\n      }\r\n    }, animationDelay);\r\n\r\n    // from finish to start\r\n    // this.pathAnimationInterval = setInterval(() => {\r\n    //   if (path.length > 0) {\r\n    //     this.nodePath.push(path.pop())\r\n    //   } else {\r\n    //     clearInterval(this.pathAnimationInterval);\r\n    //   }\r\n    // }, 20);\r\n\r\n    // random selection\r\n    // this.pathAnimationInterval = setInterval(() => {\r\n    //   if (path.length > 0) {\r\n    //     let randomIndex = Math.floor(Math.random()*path.length);\r\n    //     this.nodePath.push(path[randomIndex]);\r\n    //     path.splice(randomIndex, 1);\r\n    //   } else {\r\n    //     clearInterval(this.pathAnimationInterval);\r\n    //   }\r\n    // }, 20);\r\n  }\r\n\r\n  // default parameters\r\n  ngOnInit(): void {\r\n    this.algorithmDelay = 50; // 50\r\n    this.mapWidth = 60; // 60\r\n    this.mapHeight = 30; // 30\r\n    this.nodeMap = this.nodeMapService.generateMap(\r\n      this.mapWidth,\r\n      this.mapHeight\r\n    );\r\n\r\n    this.startingNode = this.nodeMap[30]; // 854\r\n    this.endingNode = this.nodeMap[60]; // 885\r\n    this.nodePath = [];\r\n    this.isAlgorithmOperating = false;\r\n    this.algorithmDelay = 50; // 50\r\n    this.algorithmService = this.dijkstraService;\r\n    this.isAnimated = true; // true\r\n  }\r\n}\r\n","<hr>\r\n<h3> {{ message }}</h3>\r\n<div [ngClass]=\"{\r\n    'node-map': true,\r\n    'disabled-animations' : !isAnimated\r\n}\"\r\n[style.--map-width]=\"mapWidth\"\r\n[style.--map-height]=\"mapHeight\">\r\n    <app-node *ngFor=\"let node of nodeMap\"\r\n    [node]=\"node\"\r\n    [ngClass]=\"{\r\n        'node': true, \r\n        'blocked' : node.isBlocked,\r\n        'path-node' : nodePath.includes(node),\r\n        'prospected' : node.isProspected,\r\n        'visited' : node.isVisited,\r\n        'start-node' : node == startingNode,\r\n        'end-node' : node == endingNode\r\n    }\"\r\n    (nodeClickEvent)=\"receiveClickedNode($event)\"\r\n    (nodeMoveEvent)=\"receiveMovedNode($event)\">\r\n    \r\n    </app-node>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}