{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class AlgorithmService {\n  constructor() {}\n  blockNeighbours(node) {\n    for (let neighbour of node.neighbours) {\n      neighbour.isBlocked = true;\n    }\n  }\n}\n_class = AlgorithmService;\n_class.ɵfac = function AlgorithmService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AlgorithmService","constructor","blockNeighbours","node","neighbour","neighbours","isBlocked","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Miguel\\Desktop\\algorithm-visualizer\\src\\app\\node-map\\services\\algorithm.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlgorithmService {\n\n  constructor() { }\n\n  blockNeighbours(node) {\n    for (let neighbour of node.neighbours) {\n      neighbour.isBlocked = true;\n    }\n  }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAA,GAAgB;EAEhBC,eAAeA,CAACC,IAAI;IAClB,KAAK,IAAIC,SAAS,IAAID,IAAI,CAACE,UAAU,EAAE;MACrCD,SAAS,CAACE,SAAS,GAAG,IAAI;;EAE9B;;SARWN,gBAAgB;;mBAAhBA,MAAgB;AAAA;;SAAhBA,MAAgB;EAAAO,OAAA,EAAhBP,MAAgB,CAAAQ,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}