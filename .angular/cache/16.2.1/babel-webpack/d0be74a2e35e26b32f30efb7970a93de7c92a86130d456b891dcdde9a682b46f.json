{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/node-map.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../node/node.component\";\nfunction NodeMapComponent_app_node_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-node\", 3);\n    i0.ɵɵlistener(\"nodeEvent\", function NodeMapComponent_app_node_3_Template_app_node_nodeEvent_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.receiveClickedNode($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const node_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"--map-width\", ctx_r0.mapWidth)(\"--map-height\", ctx_r0.mapHeight);\n    i0.ɵɵproperty(\"node\", node_r1);\n  }\n}\nexport class NodeMapComponent {\n  constructor(nodeMapService) {\n    this.nodeMapService = nodeMapService;\n    // Standard size\n    this.mapWidth = 10;\n    this.mapHeight = 10;\n    this.nodeMap = this.nodeMapService.generateMap(this.mapWidth, this.mapHeight);\n    this.nodeFunction = this.blockNode;\n  }\n  setMapSize(newWidth, newHeight) {\n    console.log(\"(from node-map) received map size\");\n    this.mapWidth = newWidth;\n    this.mapHeight = newHeight;\n    this.nodeMap = this.nodeMapService.generateMap(this.mapWidth, this.mapHeight);\n  }\n  setNodeFunction(type) {\n    console.log(\"(from node-map) received node function\");\n    this.nodeFunction = this.blockNode;\n  }\n  blockNode(node) {\n    console.log(`Node at ${node.xPosition}, ${node.yPosition} is ${!node.isBlocked}`);\n    node.isBlocked = !node.isBlocked;\n  }\n  receiveClickedNode($event) {\n    console.log(\"(from node-map) received clicked node\");\n    let clickedNode = $event;\n    this.nodeFunction(clickedNode);\n  }\n  logFirstNode() {\n    console.log(this.nodeMap[0]);\n  }\n}\n_class = NodeMapComponent;\n_class.ɵfac = function NodeMapComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NodeMapService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-node-map\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[\"ngClass\", \"node-map\"], [\"ngClass\", \"node\", 3, \"node\", \"--map-width\", \"--map-height\", \"nodeEvent\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"ngClass\", \"node\", 3, \"node\", \"nodeEvent\"]],\n  template: function NodeMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"This is the node map:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵtemplate(3, NodeMapComponent_app_node_3_Template, 1, 5, \"app-node\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function NodeMapComponent_Template_button_click_4_listener() {\n        return ctx.logFirstNode();\n      });\n      i0.ɵɵtext(5, \"Check Node\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.nodeMap);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i3.NodeComponent],\n  styles: [\".node-map[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: flex;\\n  flex-wrap: wrap;\\n  background-color: tomato;\\n  --parent-width: 25rem;\\n  --parent-height: 25rem;\\n  width: 25rem;\\n  height: 25rem;\\n}\\n\\n.node-map[_ngcontent-%COMP%]   .node[_ngcontent-%COMP%] {\\n  -webkit-user-select: none;\\n          user-select: none;\\n  text-align: center;\\n  width: calc(var(--parent-width) / var(--map-width));\\n  height: calc(var(--parent-height) / var(--map-height));\\n}\\n\\n.node-map[_ngcontent-%COMP%]   .node[_ngcontent-%COMP%]:hover {\\n  cursor: pointer;\\n  transform: scale(1.2);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbm9kZS1tYXAvbm9kZS1tYXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxlQUFBO0VBQ0Esd0JBQUE7RUFDQSxxQkFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7QUFDSjs7QUFFQTtFQUNJLHlCQUFBO1VBQUEsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1EQUFBO0VBQ0Esc0RBQUE7QUFDSjs7QUFFQTtFQUNJLGVBQUE7RUFDQSxxQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLm5vZGUtbWFwIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0b21hdG87XHJcbiAgICAtLXBhcmVudC13aWR0aDogMjVyZW07XHJcbiAgICAtLXBhcmVudC1oZWlnaHQ6IDI1cmVtO1xyXG4gICAgd2lkdGg6IDI1cmVtO1xyXG4gICAgaGVpZ2h0OiAyNXJlbTtcclxufVxyXG5cclxuLm5vZGUtbWFwIC5ub2RlIHtcclxuICAgIHVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgd2lkdGg6IGNhbGModmFyKC0tcGFyZW50LXdpZHRoKSAvIHZhcigtLW1hcC13aWR0aCkpO1xyXG4gICAgaGVpZ2h0OiBjYWxjKHZhcigtLXBhcmVudC1oZWlnaHQpIC8gdmFyKC0tbWFwLWhlaWdodCkpO1xyXG59XHJcblxyXG4ubm9kZS1tYXAgLm5vZGU6aG92ZXIge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","NodeMapComponent_app_node_3_Template_app_node_nodeEvent_0_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","receiveClickedNode","ɵɵelementEnd","ɵɵstyleProp","ctx_r0","mapWidth","mapHeight","ɵɵproperty","node_r1","NodeMapComponent","constructor","nodeMapService","nodeMap","generateMap","nodeFunction","blockNode","setMapSize","newWidth","newHeight","console","log","setNodeFunction","type","node","xPosition","yPosition","isBlocked","clickedNode","logFirstNode","ɵɵdirectiveInject","i1","NodeMapService","selectors","decls","vars","consts","template","NodeMapComponent_Template","rf","ctx","ɵɵtext","ɵɵtemplate","NodeMapComponent_app_node_3_Template","NodeMapComponent_Template_button_click_4_listener","ɵɵadvance"],"sources":["C:\\Users\\Miguel\\Desktop\\algorithm-visualizer\\src\\app\\node-map\\node-map.component.ts","C:\\Users\\Miguel\\Desktop\\algorithm-visualizer\\src\\app\\node-map\\node-map.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NodeMapService } from './services/node-map.service';\r\n\r\n@Component({\r\n  selector: 'app-node-map',\r\n  templateUrl: './node-map.component.html',\r\n  styleUrls: ['./node-map.component.scss']\r\n})\r\nexport class NodeMapComponent {\r\n\r\n  constructor (private nodeMapService: NodeMapService) { }  \r\n\r\n   // Standard size\r\n  mapWidth: number = 10;\r\n  mapHeight: number = 10;\r\n  nodeMap = this.nodeMapService.generateMap(this.mapWidth, this.mapHeight);\r\n  nodeFunction = this.blockNode;\r\n  \r\n  setMapSize(newWidth: number, newHeight: number) {\r\n    console.log(\"(from node-map) received map size\");\r\n    this.mapWidth = newWidth;\r\n    this.mapHeight = newHeight;\r\n    this.nodeMap = this.nodeMapService.generateMap(this.mapWidth, this.mapHeight);\r\n  }\r\n\r\n  setNodeFunction(type: string) {\r\n    console.log(\"(from node-map) received node function\");\r\n    this.nodeFunction = this.blockNode;\r\n  }\r\n\r\n  blockNode(node) {\r\n    console.log(`Node at ${node.xPosition}, ${node.yPosition} is ${!node.isBlocked}`);\r\n    node.isBlocked = !node.isBlocked;\r\n  }\r\n\r\n  receiveClickedNode($event) {\r\n    console.log(\"(from node-map) received clicked node\");\r\n    \r\n    let clickedNode = $event;\r\n\r\n    this.nodeFunction(clickedNode);\r\n  }\r\n\r\n  logFirstNode() {\r\n    console.log(this.nodeMap[0]);\r\n  }\r\n}\r\n","<h3>This is the node map:</h3>\r\n\r\n<div ngClass=\"node-map\">\r\n    <app-node *ngFor=\"let node of nodeMap\" \r\n    [node]=\"node\"\r\n    ngClass=\"node\"\r\n    [style.--map-width]=\"mapWidth\"\r\n    [style.--map-height]=\"mapHeight\"\r\n    (nodeEvent)=\"receiveClickedNode($event)\">\r\n    \r\n    </app-node>\r\n</div>\r\n\r\n<button (click)=\"logFirstNode()\">Check Node</button>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}