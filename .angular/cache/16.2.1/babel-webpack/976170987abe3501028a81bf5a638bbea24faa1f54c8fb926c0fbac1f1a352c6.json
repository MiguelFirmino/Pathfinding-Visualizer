{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class AlgorithmService {\n  constructor() {\n    this.setAlgorithmValues = (start, end) => {\n      this.startingNode = start;\n      this.endingNode = end;\n    };\n    this.getUnvisitedNeighbours = node => {\n      let nodeNeighbours = node.neighbours;\n      return nodeNeighbours.filter(item => !item.isBlocked && !item.wasVisited);\n    };\n  }\n}\n_class = AlgorithmService;\n_class.ɵfac = function AlgorithmService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AlgorithmService","constructor","setAlgorithmValues","start","end","startingNode","endingNode","getUnvisitedNeighbours","node","nodeNeighbours","neighbours","filter","item","isBlocked","wasVisited","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Miguel\\Desktop\\algorithm-visualizer\\src\\app\\node-map\\services\\algorithm.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Node } from '../../node/node';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlgorithmService {\n\n  constructor() { }\n\n  startingNode: Node;\n  endingNode: Node;\n  unvisitedNodes: Node[];\n\n  setAlgorithmValues = (start: Node, end: Node) => {\n    this.startingNode = start;\n    this.endingNode = end;\n  }\n\n  getUnvisitedNeighbours = (node: Node) => {\n    let nodeNeighbours = node.neighbours\n\n    return nodeNeighbours.filter((item) => !item.isBlocked && !item.wasVisited);\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAA;IAMA,KAAAC,kBAAkB,GAAG,CAACC,KAAW,EAAEC,GAAS,KAAI;MAC9C,IAAI,CAACC,YAAY,GAAGF,KAAK;MACzB,IAAI,CAACG,UAAU,GAAGF,GAAG;IACvB,CAAC;IAED,KAAAG,sBAAsB,GAAIC,IAAU,IAAI;MACtC,IAAIC,cAAc,GAAGD,IAAI,CAACE,UAAU;MAEpC,OAAOD,cAAc,CAACE,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACC,SAAS,IAAI,CAACD,IAAI,CAACE,UAAU,CAAC;IAC7E,CAAC;EAfe;;SAFLd,gBAAgB;;mBAAhBA,MAAgB;AAAA;;SAAhBA,MAAgB;EAAAe,OAAA,EAAhBf,MAAgB,CAAAgB,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}