{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = function () {\n  return {\n    \"display\": \"block\",\n    \"height\": \"100%\",\n    \"width\": \"100%\"\n  };\n};\nexport let NodeComponent = /*#__PURE__*/(() => {\n  var _class;\n  class NodeComponent {\n    constructor(detector) {\n      this.detector = detector;\n      this.nodeClickEvent = new EventEmitter();\n      this.nodeMoveEvent = new EventEmitter();\n      this.sendClickedNode = () => {\n        this.nodeClickEvent.emit(this.node);\n      };\n      this.sendMovednode = event => {\n        event.stopPropagation();\n        if (event.buttons === 1) {\n          console.log(`mouse moved over node at x: ${this.node.xPosition}, y: ${this.node.yPosition}`);\n          this.nodeMoveEvent.emit(this.node);\n        }\n      };\n    }\n  }\n  _class = NodeComponent;\n  _class.ɵfac = function NodeComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-node\"]],\n    inputs: {\n      node: \"node\"\n    },\n    outputs: {\n      nodeClickEvent: \"nodeClickEvent\",\n      nodeMoveEvent: \"nodeMoveEvent\"\n    },\n    decls: 1,\n    vars: 2,\n    consts: [[3, \"ngStyle\", \"mouseenter\", \"mousedown\"]],\n    template: function NodeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 0);\n        i0.ɵɵlistener(\"mouseenter\", function NodeComponent_Template_span_mouseenter_0_listener($event) {\n          ctx.sendMovednode($event);\n          return false;\n        })(\"mousedown\", function NodeComponent_Template_span_mousedown_0_listener() {\n          return ctx.sendClickedNode();\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(1, _c0));\n      }\n    },\n    dependencies: [i1.NgStyle]\n  });\n  return NodeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}