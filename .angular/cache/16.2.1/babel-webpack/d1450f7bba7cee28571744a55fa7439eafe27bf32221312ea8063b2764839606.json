{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/node-map.service\";\nimport * as i2 from \"./services/algorithms/dijkstra.service\";\nimport * as i3 from \"./services/algorithms/a-star.service\";\nimport * as i4 from \"./services/algorithms/depth-first-search.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../node/node.component\";\nfunction NodeMapComponent_app_node_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-node\", 2);\n    i0.ɵɵlistener(\"nodeClickEvent\", function NodeMapComponent_app_node_4_Template_app_node_nodeClickEvent_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.receiveClickedNode($event));\n    })(\"nodeMoveEvent\", function NodeMapComponent_app_node_4_Template_app_node_nodeMoveEvent_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.receiveMovedNode($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const node_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"--map-width\", ctx_r0.mapWidth)(\"--map-height\", ctx_r0.mapHeight);\n    i0.ɵɵproperty(\"node\", node_r1)(\"isStartingNode\", node_r1 == ctx_r0.startingNode ? true : false)(\"isEndingNode\", node_r1 == ctx_r0.endingNode ? true : false)(\"isPathNode\", ctx_r0.nodePath.includes(node_r1));\n  }\n}\nexport class NodeMapComponent {\n  constructor(nodeMapService, dijkstraService, aStartService, depthFirstSearchService) {\n    this.nodeMapService = nodeMapService;\n    this.dijkstraService = dijkstraService;\n    this.aStartService = aStartService;\n    this.depthFirstSearchService = depthFirstSearchService;\n    this.message = '';\n    this.setMapSize = (newWidth, newHeight) => {\n      console.log(`(from node-map) received map size of ${newWidth} x ${newHeight}`);\n      this.startingNode = undefined;\n      this.endingNode = undefined;\n      this.mapWidth = newWidth;\n      this.mapHeight = newHeight;\n      this.nodeMap = this.nodeMapService.generateMap(this.mapWidth, this.mapHeight);\n      this.stopAlgorithm();\n      this.headerComponent.resetAlgorithmButton();\n    };\n    this.clearMap = () => {\n      for (let node of this.nodeMap) {\n        node.parent = undefined;\n        node.pathDistance = Infinity;\n        node.heuristicDistance = Infinity;\n        node.isVisited = false;\n        node.isProspected = false;\n      }\n      this.nodePath = [];\n      this.setStartingNode(this.startingNode);\n      this.setEndingNode(this.endingNode);\n      this.stopAlgorithm();\n      this.headerComponent.resetAlgorithmButton();\n    };\n    this.receiveClickedNode = node => {\n      console.log(`Node at x: ${node.xPosition}, y: ${node.yPosition} has been clicked`);\n      if (node === this.startingNode) {\n        this.nodeFunction = this.setStartingNode;\n      } else if (node === this.endingNode) {\n        this.nodeFunction = this.setEndingNode;\n      } else if (!node.isBlocked) {\n        this.blockNode(node);\n        this.nodeFunction = this.blockNode;\n      } else {\n        this.unblockNode(node);\n        this.nodeFunction = this.unblockNode;\n      }\n    };\n    this.receiveMovedNode = node => {\n      this.nodeFunction(node);\n    };\n    this.blockNode = node => {\n      if (node !== this.startingNode && node !== this.endingNode && !node.isVisited && !node.isProspected) {\n        console.log(`Node at ${node.xPosition}, ${node.yPosition} is now %cblocked`, 'color: yellow');\n        node.isBlocked = true;\n      } else {\n        console.log(`%cUnable to block node at ${node.xPosition}, ${node.yPosition}`, 'color: red');\n      }\n    };\n    this.unblockNode = node => {\n      if (node.isBlocked) {\n        console.log(`Node at ${node.xPosition}, ${node.yPosition} is now %cunblocked`, 'color: lightgreen');\n        node.isBlocked = false;\n      }\n    };\n    this.setStartingNode = node => {\n      if (node != this.endingNode && !this.isAlgorithmOperating) {\n        console.log(`Node at ${node.xPosition}, ${node.yPosition} is now %cstarting Node`, 'color: lightblue');\n        this.startingNode = node;\n        node.isBlocked = false;\n      } else {\n        console.log(`%cUnable to set node at ${node.xPosition}, ${node.yPosition} as starting node`, 'color: red');\n      }\n    };\n    this.setEndingNode = node => {\n      if (node != this.startingNode && !this.isAlgorithmOperating) {\n        console.log(`Node at ${node.xPosition}, ${node.yPosition} is %cnow ending Node`, 'color: lightgreen');\n        this.endingNode = node;\n        node.isBlocked = false;\n      } else {\n        console.log(`%cUnable to set node at ${node.xPosition}, ${node.yPosition} as ending node`, 'color: red');\n      }\n    };\n    this.testFunction = node => {\n      // console.log(\n      //   `Node at x: ${node.xPosition}, y: ${node.yPosition} has been clicked`\n      // );\n      // console.log(node);\n      // console.log(`This node has a heuristic distance of: ${node.heuristicDistance}`);\n      // test for checking neighbours\n      // for (let { node: neighbour } of node.neighbours) {\n      //   if (neighbour) {\n      //     console.log(`Neighbour at ${neighbour.xPosition}, ${neighbour.yPosition}`);\n      //   } else {\n      //     console.log('Undefined Neighbour');\n      //   }\n      // }\n    };\n    this.startAlgorithm = () => {\n      this.clearMap();\n      this.algorithmService.setAlgorithmValues(this.startingNode, this.endingNode);\n      this.resumeAlgorithm();\n      this.isAlgorithmOperating = true;\n    };\n    this.stopAlgorithm = () => {\n      clearInterval(this.algorithmInterval);\n      this.isAlgorithmOperating = false;\n    };\n    this.resumeAlgorithm = () => {\n      this.algorithmInterval = setInterval(() => {\n        this.doAlgorithmIteration();\n      }, this.algorithmDelay);\n      this.isAlgorithmOperating = true;\n    };\n    this.doAlgorithmIteration = () => {\n      this.algorithmService.doIteration();\n      // trace path to node being visited\n      let currentNode = this.algorithmService.currentNode;\n      this.nodePath = this.depthFirstSearchService.tracePath(currentNode);\n      let {\n        isDone,\n        reason\n      } = this.algorithmService.checkIfDone();\n      if (isDone == true) {\n        this.stopAlgorithm();\n        this.headerComponent.resetAlgorithmButton();\n        if (reason == 'reached end') {\n          // this.message = `Reached End Node after ${this.aStarService.iterationCount} steps`;\n          console.log(`Reached End Node after ${this.algorithmService.iterationCount} steps`);\n        } else {\n          // this.message = `No solution available after ${this.aStarService.iterationCount} steps`;\n          console.log(`No solution available after ${this.algorithmService.iterationCount} steps`);\n          this.nodePath = [];\n        }\n        this.nodePath = this.algorithmService.tracePath(currentNode);\n      }\n    };\n    this.changeAlgorithmDelay = newDelay => {\n      this.algorithmDelay = newDelay;\n      if (this.isAlgorithmOperating) {\n        this.stopAlgorithm();\n        this.resumeAlgorithm();\n      }\n    };\n    this.changeAlgorithmService = newAlgorithm => {\n      if (this.isAlgorithmOperating) {\n        console.log('(from node-map) %cunable to change algorithm', 'color: red');\n        return;\n      }\n      console.log(`(from node-map) %cchanged algorithm to ${newAlgorithm}`, 'color: lightgreen');\n      switch (newAlgorithm) {\n        case 'dijkstra':\n          this.algorithmService = this.dijkstraService;\n          break;\n        case 'a-star':\n          this.algorithmService = this.aStartService;\n          break;\n        case 'depth-first-search':\n          this.algorithmService = this.depthFirstSearchService;\n          break;\n      }\n    };\n    // TEST FUNCTION\n    this.doCompleteCycle = () => {\n      this.clearMap();\n      setTimeout(() => {\n        this.algorithmService.setAlgorithmValues(this.startingNode, this.endingNode);\n        this.algorithmService.doCompleteCycle();\n        this.nodePath = this.algorithmService.tracePath(this.algorithmService.currentNode);\n      }, 100);\n    };\n  }\n  // default parameters\n  ngOnInit() {\n    // this.nodeFunction = this.testFunction;\n    this.algorithmDelay = 50;\n    this.mapWidth = 20;\n    this.mapHeight = 20;\n    this.nodeMap = this.nodeMapService.generateMap(this.mapWidth, this.mapHeight);\n    this.startingNode = this.nodeMap[0];\n    this.endingNode = this.nodeMap[99];\n    this.nodePath = [];\n    this.isAlgorithmOperating = false;\n    this.algorithmDelay = 50;\n    this.algorithmService = this.dijkstraService;\n  }\n}\n_class = NodeMapComponent;\n_class.ɵfac = function NodeMapComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NodeMapService), i0.ɵɵdirectiveInject(i2.DijkstraService), i0.ɵɵdirectiveInject(i3.AStarService), i0.ɵɵdirectiveInject(i4.DepthFirstSearchService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-node-map\"]],\n  inputs: {\n    headerComponent: \"headerComponent\"\n  },\n  decls: 5,\n  vars: 2,\n  consts: [[\"ngClass\", \"node-map\"], [\"ngClass\", \"node\", 3, \"node\", \"isStartingNode\", \"isEndingNode\", \"isPathNode\", \"--map-width\", \"--map-height\", \"nodeClickEvent\", \"nodeMoveEvent\", 4, \"ngFor\", \"ngForOf\"], [\"ngClass\", \"node\", 3, \"node\", \"isStartingNode\", \"isEndingNode\", \"isPathNode\", \"nodeClickEvent\", \"nodeMoveEvent\"]],\n  template: function NodeMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"hr\");\n      i0.ɵɵelementStart(1, \"h3\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 0);\n      i0.ɵɵtemplate(4, NodeMapComponent_app_node_4_Template, 1, 8, \"app-node\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.message, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.nodeMap);\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgForOf, i6.NodeComponent],\n  styles: [\".node-map[_ngcontent-%COMP%] {\\n  margin: 0 auto;\\n  position: relative;\\n  display: flex;\\n  flex-wrap: wrap;\\n  --parent-width: 25rem;\\n  --parent-height: 25rem;\\n  width: 25rem;\\n  height: 25rem;\\n}\\n\\n.node-map[_ngcontent-%COMP%]   .node[_ngcontent-%COMP%] {\\n  -webkit-user-select: none;\\n          user-select: none;\\n  text-align: center;\\n  width: calc(var(--parent-width) / var(--map-width));\\n  height: calc(var(--parent-height) / var(--map-height));\\n  transition: transform 0.15s ease-in-out;\\n}\\n\\n.node-map[_ngcontent-%COMP%]   .node[_ngcontent-%COMP%]:hover {\\n  cursor: pointer;\\n  transform: scale(1.2);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbm9kZS1tYXAvbm9kZS1tYXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0VBQ0EsZUFBQTtFQUNBLHFCQUFBO0VBQ0Esc0JBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtBQUNKOztBQUVBO0VBQ0kseUJBQUE7VUFBQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsbURBQUE7RUFDQSxzREFBQTtFQUNBLHVDQUFBO0FBQ0o7O0FBRUE7RUFDSSxlQUFBO0VBQ0EscUJBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5ub2RlLW1hcCB7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAtLXBhcmVudC13aWR0aDogMjVyZW07XHJcbiAgICAtLXBhcmVudC1oZWlnaHQ6IDI1cmVtO1xyXG4gICAgd2lkdGg6IDI1cmVtO1xyXG4gICAgaGVpZ2h0OiAyNXJlbTtcclxufVxyXG5cclxuLm5vZGUtbWFwIC5ub2RlIHtcclxuICAgIHVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgd2lkdGg6IGNhbGModmFyKC0tcGFyZW50LXdpZHRoKSAvIHZhcigtLW1hcC13aWR0aCkpO1xyXG4gICAgaGVpZ2h0OiBjYWxjKHZhcigtLXBhcmVudC1oZWlnaHQpIC8gdmFyKC0tbWFwLWhlaWdodCkpO1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTVzIGVhc2UtaW4tb3V0O1xyXG59XHJcblxyXG4ubm9kZS1tYXAgLm5vZGU6aG92ZXIge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","NodeMapComponent_app_node_4_Template_app_node_nodeClickEvent_0_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","receiveClickedNode","NodeMapComponent_app_node_4_Template_app_node_nodeMoveEvent_0_listener","ctx_r4","receiveMovedNode","ɵɵelementEnd","ɵɵstyleProp","ctx_r0","mapWidth","mapHeight","ɵɵproperty","node_r1","startingNode","endingNode","nodePath","includes","NodeMapComponent","constructor","nodeMapService","dijkstraService","aStartService","depthFirstSearchService","message","setMapSize","newWidth","newHeight","console","log","undefined","nodeMap","generateMap","stopAlgorithm","headerComponent","resetAlgorithmButton","clearMap","node","parent","pathDistance","Infinity","heuristicDistance","isVisited","isProspected","setStartingNode","setEndingNode","xPosition","yPosition","nodeFunction","isBlocked","blockNode","unblockNode","isAlgorithmOperating","testFunction","startAlgorithm","algorithmService","setAlgorithmValues","resumeAlgorithm","clearInterval","algorithmInterval","setInterval","doAlgorithmIteration","algorithmDelay","doIteration","currentNode","tracePath","isDone","reason","checkIfDone","iterationCount","changeAlgorithmDelay","newDelay","changeAlgorithmService","newAlgorithm","doCompleteCycle","setTimeout","ngOnInit","ɵɵdirectiveInject","i1","NodeMapService","i2","DijkstraService","i3","AStarService","i4","DepthFirstSearchService","selectors","inputs","decls","vars","consts","template","NodeMapComponent_Template","rf","ctx","ɵɵelement","ɵɵtext","ɵɵtemplate","NodeMapComponent_app_node_4_Template","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["C:\\Users\\Miguel\\Desktop\\algorithm-visualizer\\src\\app\\node-map\\node-map.component.ts","C:\\Users\\Miguel\\Desktop\\algorithm-visualizer\\src\\app\\node-map\\node-map.component.html"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport { NodeMapService } from './services/node-map.service';\r\nimport { DijkstraService } from './services/algorithms/dijkstra.service';\r\nimport { AStarService } from './services/algorithms/a-star.service';\r\nimport { DepthFirstSearchService } from './services/algorithms/depth-first-search.service';\r\nimport { HeaderComponent } from '../header/header.component';\r\nimport { Node } from '../node/node';\r\n\r\n@Component({\r\n  selector: 'app-node-map',\r\n  templateUrl: './node-map.component.html',\r\n  styleUrls: ['./node-map.component.scss'],\r\n})\r\nexport class NodeMapComponent implements OnInit {\r\n  @Input() headerComponent: HeaderComponent;\r\n\r\n  constructor(\r\n    private nodeMapService: NodeMapService,\r\n    private dijkstraService: DijkstraService,\r\n    private aStartService: AStarService,\r\n    private depthFirstSearchService: DepthFirstSearchService\r\n  ) {}\r\n\r\n  message: string = '';\r\n  mapWidth: number;\r\n  mapHeight: number;\r\n  nodeMap: Node[];\r\n  startingNode: Node;\r\n  endingNode: Node;\r\n  nodeFunction: any;\r\n  nodePath: Node[];\r\n  isAlgorithmOperating: boolean;\r\n  algorithmDelay: number;\r\n  algorithmInterval: any;\r\n  algorithmService: any;\r\n\r\n  setMapSize = (newWidth: number, newHeight: number) => {\r\n    console.log(\r\n      `(from node-map) received map size of ${newWidth} x ${newHeight}`\r\n    );\r\n    this.startingNode = undefined;\r\n    this.endingNode = undefined;\r\n    this.mapWidth = newWidth;\r\n    this.mapHeight = newHeight;\r\n    this.nodeMap = this.nodeMapService.generateMap(\r\n      this.mapWidth,\r\n      this.mapHeight\r\n    );\r\n    this.stopAlgorithm();\r\n    this.headerComponent.resetAlgorithmButton();\r\n  };\r\n\r\n  clearMap = () => {\r\n    for (let node of this.nodeMap) {\r\n      node.parent = undefined;\r\n      node.pathDistance = Infinity;\r\n      node.heuristicDistance = Infinity;\r\n      node.isVisited = false;\r\n      node.isProspected = false;\r\n    }\r\n\r\n    this.nodePath = [];\r\n    this.setStartingNode(this.startingNode);\r\n    this.setEndingNode(this.endingNode);\r\n    this.stopAlgorithm();\r\n    this.headerComponent.resetAlgorithmButton();\r\n  };\r\n\r\n  receiveClickedNode = (node) => {\r\n    console.log(`Node at x: ${node.xPosition}, y: ${node.yPosition} has been clicked`);\r\n\r\n    if (node === this.startingNode) {\r\n      this.nodeFunction = this.setStartingNode;\r\n    } else if (node === this.endingNode) {\r\n      this.nodeFunction = this.setEndingNode;\r\n    } else if (!node.isBlocked) {\r\n      this.blockNode(node);\r\n      this.nodeFunction = this.blockNode;\r\n    } else {\r\n      this.unblockNode(node);\r\n      this.nodeFunction = this.unblockNode;\r\n    }\r\n  };\r\n\r\n  receiveMovedNode = (node) => {\r\n    this.nodeFunction(node);\r\n  };\r\n\r\n  blockNode = (node) => {\r\n    if (\r\n      node !== this.startingNode &&\r\n      node !== this.endingNode &&\r\n      !node.isVisited &&\r\n      !node.isProspected\r\n    ) {\r\n      console.log(\r\n        `Node at ${node.xPosition}, ${node.yPosition} is now %cblocked`,\r\n        'color: yellow'\r\n      );\r\n      node.isBlocked = true;\r\n    } else {\r\n      console.log(\r\n        `%cUnable to block node at ${node.xPosition}, ${node.yPosition}`,\r\n        'color: red'\r\n      );\r\n    }\r\n  };\r\n\r\n  unblockNode = (node) => {\r\n    if (node.isBlocked) {\r\n      console.log(\r\n        `Node at ${node.xPosition}, ${node.yPosition} is now %cunblocked`,\r\n        'color: lightgreen'\r\n      );\r\n      node.isBlocked = false;\r\n    }\r\n  }\r\n\r\n  setStartingNode = (node) => {\r\n    if (node != this.endingNode && !this.isAlgorithmOperating) {\r\n      console.log(\r\n        `Node at ${node.xPosition}, ${node.yPosition} is now %cstarting Node`,\r\n        'color: lightblue'\r\n      );\r\n      this.startingNode = node;\r\n      node.isBlocked = false;\r\n    } else {\r\n      console.log(\r\n        `%cUnable to set node at ${node.xPosition}, ${node.yPosition} as starting node`,\r\n        'color: red'\r\n      );\r\n    }\r\n  };\r\n\r\n  setEndingNode = (node) => {\r\n    if (node != this.startingNode && !this.isAlgorithmOperating) {\r\n      console.log(\r\n        `Node at ${node.xPosition}, ${node.yPosition} is %cnow ending Node`,\r\n        'color: lightgreen'\r\n      );\r\n      this.endingNode = node;\r\n      node.isBlocked = false;\r\n    } else {\r\n      console.log(\r\n        `%cUnable to set node at ${node.xPosition}, ${node.yPosition} as ending node`,\r\n        'color: red'\r\n      );\r\n    }\r\n  };\r\n\r\n  testFunction = (node) => {\r\n    // console.log(\r\n    //   `Node at x: ${node.xPosition}, y: ${node.yPosition} has been clicked`\r\n    // );\r\n    // console.log(node);\r\n    // console.log(`This node has a heuristic distance of: ${node.heuristicDistance}`);\r\n\r\n    // test for checking neighbours\r\n    // for (let { node: neighbour } of node.neighbours) {\r\n    //   if (neighbour) {\r\n    //     console.log(`Neighbour at ${neighbour.xPosition}, ${neighbour.yPosition}`);\r\n    //   } else {\r\n    //     console.log('Undefined Neighbour');\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  startAlgorithm = () => {\r\n    this.clearMap();\r\n    this.algorithmService.setAlgorithmValues(\r\n      this.startingNode,\r\n      this.endingNode\r\n    );\r\n\r\n    this.resumeAlgorithm();\r\n    this.isAlgorithmOperating = true;\r\n  };\r\n\r\n  stopAlgorithm = () => {\r\n    clearInterval(this.algorithmInterval);\r\n    this.isAlgorithmOperating = false;\r\n  };\r\n\r\n  resumeAlgorithm = () => {\r\n    this.algorithmInterval = setInterval(() => {\r\n      this.doAlgorithmIteration();\r\n    }, this.algorithmDelay);\r\n\r\n    this.isAlgorithmOperating = true;\r\n  };\r\n\r\n  doAlgorithmIteration = () => {\r\n    this.algorithmService.doIteration();\r\n\r\n    // trace path to node being visited\r\n    let currentNode = this.algorithmService.currentNode;\r\n    this.nodePath = this.depthFirstSearchService.tracePath(currentNode);\r\n\r\n    let { isDone, reason } = this.algorithmService.checkIfDone();\r\n\r\n    if (isDone == true) {\r\n      this.stopAlgorithm();\r\n      this.headerComponent.resetAlgorithmButton();\r\n\r\n      if (reason == 'reached end') {\r\n        // this.message = `Reached End Node after ${this.aStarService.iterationCount} steps`;\r\n        console.log(\r\n          `Reached End Node after ${this.algorithmService.iterationCount} steps`\r\n        );\r\n      } else {\r\n        // this.message = `No solution available after ${this.aStarService.iterationCount} steps`;\r\n        console.log(\r\n          `No solution available after ${this.algorithmService.iterationCount} steps`\r\n        );\r\n        this.nodePath = [];\r\n      }\r\n\r\n      this.nodePath = this.algorithmService.tracePath(currentNode);\r\n    }\r\n  };\r\n\r\n  changeAlgorithmDelay = (newDelay: number) => {\r\n    this.algorithmDelay = newDelay;\r\n    if (this.isAlgorithmOperating) {\r\n      this.stopAlgorithm();\r\n      this.resumeAlgorithm();\r\n    }\r\n  };\r\n\r\n  changeAlgorithmService = (newAlgorithm: string) => {\r\n    if (this.isAlgorithmOperating) {\r\n      console.log('(from node-map) %cunable to change algorithm', 'color: red');\r\n      return;\r\n    }\r\n    console.log(\r\n      `(from node-map) %cchanged algorithm to ${newAlgorithm}`,\r\n      'color: lightgreen'\r\n    );\r\n    switch (newAlgorithm) {\r\n      case 'dijkstra':\r\n        this.algorithmService = this.dijkstraService;\r\n        break;\r\n      case 'a-star':\r\n        this.algorithmService = this.aStartService;\r\n        break;\r\n      case 'depth-first-search':\r\n        this.algorithmService = this.depthFirstSearchService;\r\n        break;\r\n    }\r\n  };\r\n\r\n  // TEST FUNCTION\r\n  doCompleteCycle = () => {\r\n    this.clearMap();\r\n    setTimeout(() => {\r\n      this.algorithmService.setAlgorithmValues(\r\n        this.startingNode,\r\n        this.endingNode\r\n      );\r\n      this.algorithmService.doCompleteCycle();\r\n      this.nodePath = this.algorithmService.tracePath(\r\n        this.algorithmService.currentNode\r\n      );\r\n    }, 100);\r\n  };\r\n\r\n  // default parameters\r\n  ngOnInit(): void {\r\n    // this.nodeFunction = this.testFunction;\r\n    this.algorithmDelay = 50;\r\n    this.mapWidth = 20;\r\n    this.mapHeight = 20;\r\n    this.nodeMap = this.nodeMapService.generateMap(\r\n      this.mapWidth,\r\n      this.mapHeight\r\n    );\r\n    this.startingNode = this.nodeMap[0];\r\n    this.endingNode = this.nodeMap[99];\r\n    this.nodePath = [];\r\n    this.isAlgorithmOperating = false;\r\n    this.algorithmDelay = 50;\r\n    this.algorithmService = this.dijkstraService;\r\n  }\r\n}\r\n","<hr>\r\n<h3> {{ message }}</h3>\r\n<div ngClass=\"node-map\">\r\n    <app-node *ngFor=\"let node of nodeMap\"\r\n    [node]=\"node\"\r\n    [isStartingNode]=\"node == startingNode ? true : false\"\r\n    [isEndingNode]=\"node == endingNode ? true : false\"\r\n    [isPathNode]=\"nodePath.includes(node)\"\r\n    ngClass=\"node\"\r\n    [style.--map-width]=\"mapWidth\"\r\n    [style.--map-height]=\"mapHeight\"\r\n    (nodeClickEvent)=\"receiveClickedNode($event)\"\r\n    (nodeMoveEvent)=\"receiveMovedNode($event)\">\r\n    \r\n    </app-node>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}